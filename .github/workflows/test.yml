# https://docs.github.com/en/actions

name: "Test"

on: # yamllint disable-line rule:truthy
  pull_request: null
  push:
    branches:
      - "main"
      - "develop"

env:
  PHP_EXTENSIONS: "mbstring"

jobs:
  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"
        dependencies:
          - "lowest"
          - "locked"
          - "highest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@2.23.0"
        with:
          coverage: "none"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Set up problem matchers for phpunit/phpunit"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/phpunit.json\""

#      - name: "Determine composer cache directory"
#        uses: "./.github/actions/composer/composer/determine-cache-directory"
#
#      - name: "Cache dependencies installed with composer"
#        uses: "actions/cache@v2.1.4"
#        with:
#          path: "${{ env.COMPOSER_CACHE_DIR }}"
#          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
#          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"
#
#      - name: "Install ${{ matrix.dependencies }} dependencies with composer"
#        uses: "./.github/actions/composer/composer/install"
#        with:
#          dependencies: "${{ matrix.dependencies }}"

      - name: "Install ${{ matrix.dependencies }} dependencies with composer"
        #run: "vendor/bin/phpunit --configuration=test/Unit/phpunit.xml"
        run: "composer install"

      - name: "Run unit tests with phpunit/phpunit"
        #run: "vendor/bin/phpunit --configuration=test/Unit/phpunit.xml"
        run: "vendor/bin/phpunit"
